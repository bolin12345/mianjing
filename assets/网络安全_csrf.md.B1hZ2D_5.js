import{_ as e,c as r,o,a1 as a}from"./chunks/framework.OzTm07G-.js";const u=JSON.parse('{"title":"CSRF(跨站请求伪造)","description":"","frontmatter":{"title":"CSRF(跨站请求伪造)"},"headers":[],"relativePath":"网络安全/csrf.md","filePath":"网络安全/csrf.md"}'),t={name:"网络安全/csrf.md"},i=a('<h1 id="跨站请求伪造-cross-site-request-forgery-简称-csrf" tabindex="-1">跨站请求伪造（Cross-Site Request Forgery，简称 CSRF） <a class="header-anchor" href="#跨站请求伪造-cross-site-request-forgery-简称-csrf" aria-label="Permalink to &quot;跨站请求伪造（Cross-Site Request Forgery，简称 CSRF）&quot;">​</a></h1><p>通过诱使用户在已认证的 web 应用程序上执行非预期操作。</p><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><p>利用用户已经登录的身份，向目标网站发送恶意请求。攻击者通过诱使用户点击恶意链接或访问恶意网站，利用用户身份执行恶意操作。由于浏览器会自动发送用户身份验证信息（如 cookie），服务器无法区分该请求是用户自己发起还是攻击者伪造。</p><h2 id="防护措施" tabindex="-1">防护措施 <a class="header-anchor" href="#防护措施" aria-label="Permalink to &quot;防护措施&quot;">​</a></h2><h3 id="_1-csrf-token" tabindex="-1">1. CSRF Token <a class="header-anchor" href="#_1-csrf-token" aria-label="Permalink to &quot;1. CSRF Token&quot;">​</a></h3><ul><li><strong>生成和存储 Token</strong>：在用户登录时生成一个随机的 CSRF Token，并将其存储在用户的会话中。</li><li><strong>嵌入表单</strong>：在每个表单中嵌入 CSRF Token，作为隐藏字段。</li><li><strong>验证 Token</strong>：服务器在处理表单提交时，验证请求中的 CSRF Token 是否与会话中的 Token 匹配。</li><li><strong>设置过期时间</strong>：为 CSRF Token 设置过期时间，定期刷新以增加安全性。</li></ul><h3 id="_2-验证-referer-和-origin-头" tabindex="-1">2. 验证 Referer 和 Origin 头 <a class="header-anchor" href="#_2-验证-referer-和-origin-头" aria-label="Permalink to &quot;2. 验证 Referer 和 Origin 头&quot;">​</a></h3><ul><li><strong>Referer 头</strong>：请求头中包含 Referer，服务器可以通过检查 Referer 头来判断请求来源是否可信。</li><li><strong>Origin 头</strong>：对于某些现代浏览器，可以检查 Origin 头来进一步确认请求来源。</li></ul><h3 id="_3-验证码" tabindex="-1">3. 验证码 <a class="header-anchor" href="#_3-验证码" aria-label="Permalink to &quot;3. 验证码&quot;">​</a></h3><ul><li><strong>动态验证码</strong>：在关键操作（如转账、修改密码等）时，要求用户输入验证码，增加攻击难度。</li><li><strong>图形验证码</strong>：使用图形验证码，防止自动化工具的攻击。</li></ul>',11),s=[i];function n(l,c,h,_,d,f){return o(),r("div",null,s)}const k=e(t,[["render",n]]);export{u as __pageData,k as default};
