import{_ as t,c as a,o as e,a1 as _}from"./chunks/framework.OzTm07G-.js";const m=JSON.parse('{"title":"分层的意义","description":"","frontmatter":{},"headers":[],"relativePath":"计网/网络的五层模型.md","filePath":"计网/网络的五层模型.md"}'),o={name:"计网/网络的五层模型.md"},p=_('<h1 id="分层的意义" tabindex="-1">分层的意义 <a class="header-anchor" href="#分层的意义" aria-label="Permalink to &quot;分层的意义&quot;">​</a></h1><ul><li>每层相互独立，只需解决自己的问题</li><li>每层无须考虑上层交付，仅需吧自己的结果交给下层即可</li><li>每层又多种方案可供选择，选择不同的方案不会对上下层造成影响</li><li>每层都会在上一层基础上增加一些额外信息</li></ul><h2 id="五层网络模型" tabindex="-1">五层网络模型 <a class="header-anchor" href="#五层网络模型" aria-label="Permalink to &quot;五层网络模型&quot;">​</a></h2><p>应用层： 具体应用相关的消息格式 Http、FTP、DNS、SMTP、POP3 传输层： 如何保证消息的可靠传递 TCP、UDP 网络层： 如何在互联网中找到对方 IP、路由器 数据链路层： 如何在一个子网中找到对方 MAC、交换机 物理层： 上面给我的东西如何用信号表示 光纤 双绞线、同轴电缆、集线器</p><p>说说网络的五层协议 从上到下分别为：应用层、传输层、网络层、数据链路层、物理层，在发送消息时，消息从上到下打包，每一层在上一层的基础上加包，而接收消息时，从下到上解包，最终得到原始信息</p><p>其中：<br> 应用层主要面向互联网中的应用场景，比如网页、邮件、文件中心等，代表协议有http、smtp、pop3、ftp、dns等</p><p>传输层主要面向传输过程，比如TCP协议是为了保证可靠的传输、而UDP协议是一种无连接的广播，他们提供了不同的传输方式</p><p>网络层主要解决如何定位目标机如何寻找最优路径问题，比如IP等等</p><p>数据链路层的作用是及那个数据在一个子网（广播域）进行有效传输，MAC地址、交换机都是属于该层</p><p>物理层解决二进制数到信号之间的互转问题、集线器、双绞线、同轴电缆等都是数据该层的设备</p>',10),r=[p];function i(l,s,n,c,d,h){return e(),a("div",null,r)}const f=t(o,[["render",i]]);export{m as __pageData,f as default};
